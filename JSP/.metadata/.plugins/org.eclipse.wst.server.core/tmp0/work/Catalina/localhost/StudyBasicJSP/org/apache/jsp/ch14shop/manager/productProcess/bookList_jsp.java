/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.11
 * Generated at: 2017-02-15 17:01:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ch14shop.manager.productProcess;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import ch14.bookshop.master.ShopBookDBBean;
import ch14.bookshop.master.ShopBookDataBean;
import java.util.List;
import java.text.SimpleDateFormat;

public final class bookList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


		SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd HH:mm");
		
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/ch14shop/manager/productProcess/../../etc/color.jspf", Long.valueOf(1441865104000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("ch14.bookshop.master.ShopBookDBBean");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("ch14.bookshop.master.ShopBookDataBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charser=UTF-8;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
 
  String bodyback_c="#e0ffff";
  String back_c="#8fbc8f";
  String title_c="#5f9ea0";
  String value_c="#b0e0e6";
  String bar="#778899";

      out.write('\n');

String managerId="";
try{
	managerId = (String)session.getAttribute("managerId");
	if(managerId == null||managerId.equals(""))
		response.sendRedirect("../logon/managerLoginForm.jsp");
	else{
		
      out.write("\n");
      out.write("\t\t\n");
      out.write("\t\t");
      out.write('\n');
      out.write('	');
      out.write('	');

		List<ShopBookDataBean> bookList = null;
		int number=0;
		String book_kind="";
		book_kind=request.getParameter("book_kind");
		ShopBookDBBean bookProcess = ShopBookDBBean.getInstance();
		int count=bookProcess.getBookCount();
		if(count>0)
			bookList = bookProcess.getBooks(book_kind);
		
		
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("\t<head>\n");
      out.write("\t\t<meta charset=\"UTF-8\">\n");
      out.write("\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n");
      out.write("\t\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>\n");
      out.write("\t\t<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n");
      out.write("\t\t<title>Book List</title>\n");
      out.write("\t</head>\n");
      out.write("\t<body>\n");
      out.write("\t\t");

		String book_kindName="";
		if(book_kind.equals("100")) 
			book_kindName = "literature";
		else if(book_kind.equals("200"))
			book_kindName = "foreign language";
		else if(book_kind.equals("300"))
			book_kindName = "computer";
		else if(book_kind.equals("all"))
			book_kindName = "all";
		
      out.write("\n");
      out.write("\t\t<a href=\"../managerMain.jsp\">back to managerMain</a>\n");
      out.write("\t\t&nbsp;\n");
      out.write("\t\t<p>\n");
      out.write("\t\t\t");
      out.print(book_kindName );
      out.write(" 's list : \n");
      out.write("\t\t\t");

			if(book_kind.equals("all")){
				
      out.write("\n");
      out.write("\t\t\t\t");
      out.print(count );
      out.write(" books\t\t\t\t\n");
      out.write("\t\t\t\t");

			}else{
				
      out.write("\n");
      out.write("\t\t\t\t");
      out.print(bookList.size() );
      out.write("\n");
      out.write("\t\t\t\t");

			}
			
      out.write("\n");
      out.write("\t\t</p>\n");
      out.write("\t\t\n");
      out.write("\t\t<table>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td align=\"right\">\n");
      out.write("\t\t\t\t\t<a href=\"bookRegisterForm.jsp\">Register book</a>\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t</table>\n");
      out.write("\t\t\n");
      out.write("\t\t");

		if(count==0){			
			
      out.write("\n");
      out.write("\t\t\t<table>\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<td align=\"center\">no books in DB</td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t</table>\n");
      out.write("\t\t\n");
      out.write("\t\t\t");

		}
		else{
			
      out.write("\n");
      out.write("\t\t\t\n");
      out.write("\t\t<table>\n");
      out.write("\t\t\t<tr height=\"30\">\n");
      out.write("\t\t\t\t<td align=\"center\" width=\"30\">number\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t<td align=\"center\" width=\"30\">book_kind\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t<td align=\"center\" width=\"100\">book_title\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t<td align=\"center\" width=\"50\">book_price\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t<td align=\"center\" width=\"50\">book_count\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t<td align=\"center\" width=\"70\">author\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t<td align=\"center\" width=\"70\">publishing_com\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t<td align=\"center\" width=\"50\">publishing_date\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t<td align=\"center\" width=\"50\">book_image\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t<td align=\"center\" width=\"30\">discount_rate\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t<td align=\"center\" width=\"70\">reg_date\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t<td align=\"center\" width=\"50\">modify\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t<td align=\"center\" width=\"50\">delete\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t");

			for(int i=0;i<bookList.size();i++){
				ShopBookDataBean book = (ShopBookDataBean)bookList.get(i);
				
      out.write("\n");
      out.write("\t\t\t<tr height=\"30\">\n");
      out.write("\t\t\t\t<td width=\"30\">");
      out.print(++number );
      out.write("\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t<td width=\"30\">");
      out.print(book.getBook_kind() );
      out.write("\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t<td width=\"100\">");
      out.print(book.getBook_title() );
      out.write("\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t<td width=\"50\">");
      out.print(book.getBook_price());
      out.write("\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t<td width=\"50\">\n");
      out.write("\t\t\t\t\t");

					if(book.getBook_count() == 0){
						
      out.write("\n");
      out.write("\t\t\t\t\t\t<font color=\"red\">");
      out.print("sold out" );
      out.write("</font>\n");
      out.write("\t\t\t\t\t\t");

					}
					else{
						
      out.write("\n");
      out.write("\t\t\t\t\t\t");
      out.print(book.getBook_count() );
      out.write("\n");
      out.write("\t\t\t\t\t\t");

					}
					
      out.write("\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t<td width=\"70\">");
      out.print(book.getAuthor() );
      out.write("\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t<td width=\"70\">");
      out.print(book.getPublishing_com() );
      out.write("\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t<td width=\"50\">");
      out.print(book.getPublishing_date() );
      out.write("\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t<td width=\"50\">");
      out.print(book.getBook_image() );
      out.write("\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t<td width=\"30\">");
      out.print(book.getDiscount_rate() );
      out.write("\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t<td width=\"70\">");
      out.print(sdf.format(book.getReg_date()) );
      out.write("\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t<td width=\"50\">\n");
      out.write("\t\t\t\t\t<a href=\"bookUpdateForm.jsp?book_id=");
      out.print(book.getBook_id());
      out.write("&\n");
      out.write("\t\t\t\t\t\t\tbook_kind=");
      out.print(book.getBook_kind());
      out.write("\">modify\n");
      out.write("\t\t\t\t\t</a>\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t<td width=\"50\">\n");
      out.write("\t\t\t\t\t<a href=\"bookDeleteForm.jsp?book_id=");
      out.print(book.getBook_id());
      out.write("&\n");
      out.write("\t\t\t\t\t\t\tbook_kind=");
      out.print(book.getBook_kind());
      out.write("\">delete\n");
      out.write("\t\t\t\t\t</a>\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t\t");

			}
			
      out.write("\n");
      out.write("\t\t</table> \n");
      out.write("\t\t\t");

		}
		
      out.write("\n");
      out.write("\t\t<br>\n");
      out.write("\t\t<a href=\"../managerMain.jsp\">back to managerMain</a>\n");
      out.write("\t</body>\n");
      out.write("</html>\n");
}
}catch(Exception e){
	e.printStackTrace();
}

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
