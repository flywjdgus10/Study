/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.11
 * Generated at: 2017-02-09 12:40:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ch13;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import ch13.board.BoardDBBean;
import ch13.board.BoardDataBean;
import java.util.List;
import java.text.SimpleDateFormat;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


int pageSize = 10;
SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm");
//for showing the date informations of articles 

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/ch13/color.jspf", Long.valueOf(1441860912000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("ch13.board.BoardDBBean");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("ch13.board.BoardDataBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charser=UTF-8;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

   String bodyback_c="#FFF0B5";
   String value_c="#FFE271";

      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');

String pageNum = request.getParameter("pageNum");
if(pageNum == null) pageNum = "1";		
int currentPage = Integer.parseInt(pageNum);
//To show properate page

int startRow = (currentPage-1)*pageSize+1;
int endRow = currentPage*pageSize;
//To show properate articles

int count=0;
int number=0;																																																																																																																																																																																																																																																																																																																																												
List<BoardDataBean> articleList = null;
BoardDBBean dbPro = BoardDBBean.getInstance();

count = dbPro.getArticleCount();
if(count>0) articleList = dbPro.getArticles(startRow,pageSize);
//get approprate articles to show



number = count-(currentPage-1)*pageSize;
//To show the number of articles at left side of page

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("\t<head>\n");
      out.write("\t\t<meta charset=\"UTF-8\">\n");
      out.write("\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n");
      out.write("\t\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>\n");
      out.write("\t\t<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n");
      out.write("\t\t<title>board</title>\n");
      out.write("\t</head>\n");
      out.write("\t<body bgcolor=\"");
      out.print(bodyback_c);
      out.write("\">\n");
      out.write("\t\t<div class=\"container\">\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t");
if(count==0){ 
      out.write("\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<!--  no dates in DB --> \n");
      out.write("\t\t\t<div class=\"alert alert-danger\">\n");
      out.write("\t\t\t\t<h1 align=\"center\">no content is in DB.</h1>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<a href = \"writeForm.jsp\" class=\"btn btn-info btn-xs\" role=\"button\">\n");
      out.write("\t\t\t\twrite\n");
      out.write("\t\t\t</a>\n");
      out.write("\t\t\t");

			}
			
			
			
			
			else{
      out.write("\n");
      out.write("\t\t\t<div class=\"panel panel-info\">\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\t<!-- Top div -->\n");
      out.write("\t\t\t\t<div class=\"panel-heading\">\n");
      out.write("\t\t\t\t\t<h3 align=\"center\">content list(list count : ");
      out.print(count);
      out.write(")</h3>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<div class=\"panel-body\">\n");
      out.write("\t\t\t\t\t<a href = \"writeForm.jsp\" class=\"btn btn-info btn-xs\" role=\"button\">\n");
      out.write("\t\t\t\t\t\twrite\n");
      out.write("\t\t\t\t\t</a>\n");
      out.write("\t\t\t\t\t<br><br>\n");
      out.write("\t\t\t\t\t<table class=\"table\">\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t<!-- head side of list -->\n");
      out.write("\t\t\t\t\t\t<tr height=\"30\" >\n");
      out.write("\t\t\t\t\t\t\t<th align=\"center\" width=\"50\">count</th>\n");
      out.write("\t\t\t\t\t\t\t<th align=\"center\" width=\"250\">title</th>\n");
      out.write("\t\t\t\t\t\t\t<th align=\"center\" width=\"100\">writer</th>\n");
      out.write("\t\t\t\t\t\t\t<th align=\"center\" width=\"150\">date</th>\n");
      out.write("\t\t\t\t\t\t\t<th align=\"center\" width=\"50\">view</th>\n");
      out.write("\t\t\t\t\t\t\t<th align=\"center\" width=\"100\">IP</th>\n");
      out.write("\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t");

						for(int i=0;i<articleList.size();i++){
							BoardDataBean article = articleList.get(i);
						
      out.write("\n");
      out.write("\t\t\t\t\t\t<!-- contents side of list -->\n");
      out.write("\t\t\t\t\t\t<tr height=\"30\">\n");
      out.write("\t\t\t\t\t\t\t<td width=\"50\">");
      out.print(number--);
      out.write("\n");
      out.write("\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t\t<td width=\"250\" align=\"left\">\n");
      out.write("\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t<!-- show article's level -->\n");
      out.write("\t\t\t\t\t\t\t\t");

								int wid=0;
								if(article.getRe_level()>0){
									wid=5*(article.getRe_level());
									
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t<img src=\"images/level.png\" width=\"");
      out.print(wid);
      out.write("\" height=\"16\">\n");
      out.write("\t\t\t\t\t\t\t\t\t<img src=\"images/re.png\">\n");
      out.write("\t\t\t\t\t\t\t\t\t");

								}								
								else{
									
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t<img src=\"images/level.png\" width=\"");
      out.print(wid);
      out.write("\" height=\"16\">\n");
      out.write("\t\t\t\t\t\t\t\t\t");

								}
								
								
								
								
								
								
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t<!-- show article's title -->\n");
      out.write("\t\t\t\t\t\t\t\t<a href=\"content.jsp?num=");
      out.print(article.getNum());
      out.write("&pageNum=");
      out.print(currentPage);
      out.write("\">\n");
      out.write("\t\t\t\t\t\t\t\t\t");
      out.print(article.getSubject());
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t</a>\n");
      out.write("\t\t\t\t\t\t\t\t");

								if(article.getReadcount() >= 20){
									
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t<!-- show article's view count -->\n");
      out.write("\t\t\t\t\t\t\t\t\t<img src=\"images/hot.png\" border=\"0\" height=\"16\">\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t");

								}
								
      out.write("\n");
      out.write("\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t<!-- other informs of article -->\n");
      out.write("\t\t\t\t\t\t\t<td width=\"100\" align=\"left\">\n");
      out.write("\t\t\t\t\t\t\t\t<a href=\"mailto:");
      out.print(article.getEmail());
      out.write("\">\n");
      out.write("\t\t\t\t\t\t\t\t\t");
      out.print(article.getWriter() );
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t</a>\n");
      out.write("\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t\t<td width=\"150\">");
      out.print(sdf.format(article.getReg_date()) );
      out.write("</td>\n");
      out.write("\t\t\t\t\t\t\t<td width=\"50\">");
      out.print(article.getReadcount() );
      out.write("</td>\n");
      out.write("\t\t\t\t\t\t\t<td width=\"100\">");
      out.print(article.getIp() );
      out.write("</td>\n");
      out.write("\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t");
}
      out.write("\n");
      out.write("\t\t\t\t\t</table>\t\n");
      out.write("\t\t\t\t</div>\t\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t");
}
      out.write("\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<!-- calculate proper page -->\n");
      out.write("\t\t\t");

			if(count > 0){
				int pageCount = count/pageSize + (count%pageSize == 0 ? 0 : 1);
				int startPage = 1;
				
				
				if(currentPage % 10 != 0) 
					startPage = (int)(currentPage/10)*10+1;
				else 
					startPage = ((int)(currentPage/10)-1)*10+1;
				//startpage calculate
				
				int pageBlock = 10;
				int endPage = startPage + pageBlock - 1;
				//endPage means the last page of current scope
				
				if(endPage > pageCount) endPage = pageCount;
				//if current scope is bigger than pageCount
				
				if(startPage > 10){
					
      out.write("\n");
      out.write("\t\t\t\t\t<a href=\"list.jsp?pageNum=");
      out.print(startPage-10 );
      out.write("\">[before]</a>\n");
      out.write("\t\t\t\t\t");

				}//if there are pages to go before
				//startPage is bigger than 10
				
				for(int i=startPage;i<=endPage;i++){
					
      out.write("\n");
      out.write("\t\t\t\t\t<div align=\"center\">\n");
      out.write("\t\t\t\t\t\t<a href=\"list.jsp?pageNum=");
      out.print(i );
      out.write('"');
      out.write('>');
      out.write('[');
      out.print(i);
      out.write("]</a>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t");

				}
				
				
				if(endPage < pageCount){
					
      out.write("\n");
      out.write("\t\t\t\t\t<a href=\"list.jsp?pageNum=");
      out.print(startPage+10 );
      out.write("\">[next]</a>\n");
      out.write("\t\t\t\t\t");
			
				}//if there are pages to go next
				//endPage(currentEndPage) is smaller than last page.
			}
			
      out.write("\n");
      out.write("\t\t</div>\n");
      out.write("\t</body>\n");
      out.write("</html>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
