package ch14.bookshop.master;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.sql.DataSource;

public class ShopBookDBBean {
	
	private static ShopBookDBBean instance = new ShopBookDBBean();
	public static ShopBookDBBean getInstance(){ return instance; }
	private ShopBookDBBean(){}
	
	private Connection getConnection() throws Exception{
		Context initCtx = new InitialContext();
		Context envCtx = (Context)initCtx.lookup("java:comp/env");
		DataSource ds = (DataSource)envCtx.lookup("jdbc/basicjsp");
		return ds.getConnection();
	}
	
	public int managerCheck(String id,String passwd) throws Exception{
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		String dbpasswd = "";
		int x = -1;
		
		try{
			conn = getConnection();
			pstmt = conn.prepareStatement("SELECT managerPasswd FROM manager WHERE managerId = ?");
			pstmt.setString(1, id);
			rs = pstmt.executeQuery();
			
			if(rs.next()){
				dbpasswd = rs.getString("managerPasswd");
				if(dbpasswd.equals(passwd)) 
					x = 1;
				else
					x = 0;
			}
			else
				x = -1;
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			if(conn != null){
				try{conn.close();}
				catch(SQLException e){}
			}
			if(rs != null){
				try{rs.close();}
				catch(SQLException e){}
			}
			if(pstmt != null){
				try{pstmt.close();}
				catch(SQLException e){}
			}
		}
		return x;
	}
	
	
	
	
	public void insertBook(ShopBookDataBean book) throws Exception{
		Connection conn = null;
		PreparedStatement pstmt = null;
		try{
			conn = getConnection();
			pstmt = conn.prepareStatement("INSERT INTO book VALUES(?,?,?,?,?,?,?,?,?,?,?,?)");
			pstmt.setInt(1, book.getBook_id());
			pstmt.setString(2, book.getBook_kind());
			pstmt.setString(3, book.getBook_title());			
			pstmt.setInt(4, book.getBook_price());
			pstmt.setShort(5, book.getBook_count());
			pstmt.setString(6, book.getBook_image());
			pstmt.setString(7, book.getBook_content());
			pstmt.setString(8, book.getAuthor());
			pstmt.setString(9, book.getPublishing_com());
			pstmt.setString(10, book.getPublishing_date());
			pstmt.setByte(11, book.getDiscount_rate());
			pstmt.setTimestamp(12, book.getReg_date());
			
			pstmt.executeUpdate();
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			if(conn != null){
				try{conn.close();}
				catch(SQLException e){}
			}
			if(pstmt != null){
				try{pstmt.close();}
				catch(SQLException e){}
			}
			
		}
	}
	
	public int getBookCount() throws Exception{
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		
		int x=0;
		
		try{
			conn = getConnection();
			pstmt = conn.prepareStatement("SELECT COUNT(*) FROM book");
			rs = pstmt.executeQuery();
			if(rs.next())
				x = rs.getInt(1);
			
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			if(conn != null){
				try{conn.close();}
				catch(SQLException e){}
			}
			if(rs != null){
				try{rs.close();}
				catch(SQLException e){}
			}
			if(pstmt != null){
				try{pstmt.close();}
				catch(SQLException e){}
			}
		}
		return x;
		
	}
	
	
	
	public List<ShopBookDataBean> getBooks(String book_kind) throws Exception{
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		List<ShopBookDataBean> bookList = null;
		
		String sql = "";
		
		try{
			conn = getConnection();
			
			if(book_kind.equals("all")){
				sql = "SELECT * FROM book";
				pstmt = conn.prepareStatement(sql);
			}
			else{
				sql = "SELECT * FROM book WHERE book_kind = ? ORDER BY reg_date DESC";
				pstmt = conn.prepareStatement(sql);
				pstmt.setString(1, book_kind);
			}
			
			rs = pstmt.executeQuery();
			
			if(rs.next()){
				bookList = new ArrayList<ShopBookDataBean>();
				ShopBookDataBean book = null;
				do{
					 book = new ShopBookDataBean();
					 
					 book.setBook_id(rs.getInt("book_id"));
					 book.setBook_kind(rs.getString("book_kind"));
					 book.setBook_title(rs.getString("book_title"));
					 book.setBook_price(rs.getInt("book_price"));
					 book.setBook_count(rs.getShort("book_count"));
					 book.setBook_image(rs.getString("book_image"));
					 book.setAuthor(rs.getString("author"));
					 book.setPublishing_com(rs.getString("publishing_com"));
					 book.setPublishing_date(rs.getString("publishing_date"));
					 book.setDiscount_rate(rs.getByte("discount_rate"));
					 book.setReg_date(rs.getTimestamp("reg_date"));
					 
					 bookList.add(book);
				}while(rs.next());
			}
				
			
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			if(conn != null){
				try{conn.close();}
				catch(SQLException e){}
			}
			if(rs != null){
				try{rs.close();}
				catch(SQLException e){}
			}
			if(pstmt != null){
				try{pstmt.close();}
				catch(SQLException e){}
			}
		}
		return bookList;
	}
	
	
	public ShopBookDataBean[] getBooks(String book_kind,int count) throws Exception{
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		ShopBookDataBean bookList[] = null;
		int i=0;
		try{
			conn = getConnection();
			String sql = "SELECT * FROM book WHERE book_kind=?"
					+ "ORDER BY reg_date DESC limit ?,?";			
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, book_kind);
			pstmt.setInt(2, 0);
			pstmt.setInt(3, count);
			rs = pstmt.executeQuery();
			if(rs.next()){
				bookList = new ShopBookDataBean[count];
				ShopBookDataBean book = null;
				do{
					book = new ShopBookDataBean();
					book.setBook_id(rs.getInt("book_id"));
					book.setBook_kind(rs.getString("book_kind"));
					book.setBook_title(rs.getString("book_title"));
					book.setBook_price(rs.getInt("book_price"));
					book.setBook_count(rs.getShort("book_count"));
					book.setBook_image(rs.getString("book_image"));
					book.setAuthor(rs.getString("author"));
					book.setPublishing_com(rs.getString("publishing_com"));
					book.setPublishing_date(rs.getString("publishing_date"));
					book.setDiscount_rate(rs.getByte("discount_rate"));
					book.setReg_date(rs.getTimestamp("reg_date"));
					bookList.add(book);
				}while(rs.next());
			}
		}
	}
	public ShopBookDBBean getBook(int bookId) throws Exception{
		
	}
	
	
	
	public void updateBook(ShopBookDataBean book,int bookId) throws Exception{
		Connection conn = null;
		PreparedStatement pstmt = null;
		try{
			conn = getConnection();
			pstmt = conn.prepareStatement("UPDATE book SET book_kind=?,book_title=?,"
					+ "book_price=?,book_count=?,book_image=?,book_content=?,author=?,"
					+ "publishing_com=?,publishing_date=?,discount_rate=? ");
			pstmt.setString(1, book.getBook_kind());
			pstmt.setString(2, book.getBook_title());
			pstmt.setInt(3, book.getBook_price());
			pstmt.setShort(4, book.getBook_count());
			pstmt.setString(5, book.getBook_image());
			pstmt.setString(6, book.getBook_content());
			pstmt.setString(7, book.getAuthor());
			pstmt.setString(8, book.getPublishing_com());
			pstmt.setString(9, book.getPublishing_date());
			pstmt.setByte(10, book.getDiscount_rate());
			pstmt.setInt(11, bookId);
			
			pstmt.executeUpdate();
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			if(conn != null){
				try{conn.close();}
				catch(SQLException e){}
			}
			if(pstmt != null){
				try{pstmt.close();}
				catch(SQLException e){}
			}
		}
		
		
	}
	
	public void deleteBook(int bookId) throws Exception{
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		
		try{
			conn = getConnection();
			pstmt = conn.prepareStatement("DELETE FROM book WHERE book_id = ?");
			pstmt.setInt(1, bookId);
			pstmt.executeQuery();
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			if(conn != null){
				try{conn.close();}
				catch(SQLException e){}
			}
			if(rs != null){
				try{rs.close();}
				catch(SQLException e){}
			}
			if(pstmt != null){
				try{pstmt.close();}
				catch(SQLException e){}
			}
		}
		
	}
	
	
}































